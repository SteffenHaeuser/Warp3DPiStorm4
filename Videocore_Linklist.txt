Infos as to the differences between Videocore IV and Videocore VI: There seems to be some reverse engineered documentation in the documents of the lib i posted for vc6: https://github.com/wimrijnders/V3DLib/blob/main/Doc/FAQ.md#what-are-the-differences-between-videocore-iv-and-vi

Header-only VC6 Barematel able to render triangles, including also a simulator for v3d/qpu:  https://macoy.me/blog/programming/PiGPU

3D Library with Source-Code for Videocore IV and Videocore VI, including docs with lots of infos on the Chipsets: https://github.com/wimrijnders/V3DLib

Mesa3D Drivers: https://docs.mesa3d.org/drivers/v3d.html

Videocore VI (Pi4) Baremetal examples for rendering triangles: https://github.com/Random06457/rpi4-gpu-bare-metal-examples/

Unsorted Linklist:

https://github.com/hermanhermitage/videocoreiv
https://github.com/dwelch67/raspberrypi
https://www.cl.cam.ac.uk/projects/raspberrypi/tutorials/os/
https://github.com/raspberrypi/firmware
https://github.com/raspberrypi/firmware/wiki/Accessing-mailboxes
https://bitbanged.com/posts/understanding-rpi/the-mailbox/
https://docs.mesa3d.org/drivers/vc4.html
https://github.com/librerpi/lk-overlay/blob/master/arch/vpu/start.S
https://github.com/itszor/binutils-vc4/blob/708acc851880dbeda1dd18aca4fd0a95b2573b36/bfd/elf32-vc4.c
https://bakhi.github.io/mobileGPU/v3d/

QPU VPM load/store:
https://forums.raspberrypi.com/viewtopic.php?t=169576

https://github.com/doe300/VC4CL/wiki/Hardware

(rpi-playground)
https://rpiplayground.wordpress.com/2014/05/03/hacking-the-gpu-for-fun-and-profit-pt-1/

Some more Info:

Here's a direct link to the latest assembler:

https://macoy.me/code/macoy/rpi-bare-metal/src/branch/master/tools/v3dAssembler.h

There are other files, including the very small subset simulator, here:

https://macoy.me/code/macoy/rpi-bare-metal/src/branch/master/tools

The code in this file is a suitable reference:

https://macoy.me/code/macoy/rpi-system/src/branch/master/sample/003-v3dtext/kernel.c#L307

The binning and vertex shaders are below that, and are commented.

The full assembly process is here:

https://macoy.me/code/macoy/rpi-system/src/branch/master/sample/003-v3dtext/kernel.c#L2002

v3d_qpu_validate() is an important safeguard after assembly because the V3D has some strange rules that are hard for humans to remember. Many of them carry over from the VideoCore IV and are documented in the public documentation for the IV.

My notes may provide some insight:

https://macoy.me/code/macoy/rpi-bare-metal/src/branch/master/tools/Shaders.org
The webpage has sometimes connection problems it seems (right now), and all links need the login: human pw: noai access

https://forums.raspberrypi.com/viewtopic.php?t=169576

Paraj's Warp3D.library for Pi3 Proof-of-Concept: The code for my POC: https://github.com/mras0/vc4d

